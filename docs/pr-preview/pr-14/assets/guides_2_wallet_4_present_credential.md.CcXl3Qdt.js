import{_ as e,c as t,o as i,a3 as a}from"./chunks/framework.CHPBlGxi.js";const u=JSON.parse('{"title":"Present a credential","description":"","frontmatter":{},"headers":[],"relativePath":"guides/2_wallet/4_present_credential.md","filePath":"guides/2_wallet/4_present_credential.md","lastUpdated":1715167532000}'),r={name:"guides/2_wallet/4_present_credential.md"},o=a('<h1 id="present-a-credential" tabindex="-1">Present a credential <a class="header-anchor" href="#present-a-credential" aria-label="Permalink to &quot;Present a credential&quot;">​</a></h1><p>A credential is a cryptographic object, containing a set of claims and a signature from a trusted issuer.</p><p>The purpose of having a credential is to able to <strong>prove the claims</strong> to someone in a <strong>secure and private way</strong>. In order to prove the claims, you will need to <em>present the credential</em>, the term &#39;present&#39; has technical implication that involve:</p><ul><li>Cryptographic transformations applied to the credential in order to produce a <strong>Verifiable Presentation</strong></li><li>The communication of the Verifiable Presentation to an application or microservice (called <em>Relying Party</em>) that will verify the claims</li></ul><p>Those steps (among with others that we omit for simplicity) occur in the <strong>Verification Flow</strong>.</p><h2 id="the-verification-flow" tabindex="-1">The Verification Flow <a class="header-anchor" href="#the-verification-flow" aria-label="Permalink to &quot;The Verification Flow&quot;">​</a></h2><p>The Verification Flow is initiated by a Verifier, meaning a user equipped with the <a href="https://github.com/ForkbombEu/verifier" target="_blank" rel="noreferrer">Verifier App</a> and the following happens:</p><ol><li>The Verifier App produces a QR-Code</li><li>The user holding the Wallet App, opens QR-Code reader and scans the QR-Code</li><li>The Wallet App reads the QR-Code, reads the request of the Verifier and search through list of obtained credentials to see if any of them matches the request.</li><li>If a credential is found, that matches the request of the Verifier, than a Verifiable Presentation is produced and sent to Relying Party</li><li>If the verification of the Verifiable Presentation is successful (or fails), a notification will appear in both the Wallet and Verififer App</li></ol>',8),n=[o];function s(l,c,h,d,p,f){return i(),t("div",null,n)}const m=e(r,[["render",s]]);export{u as __pageData,m as default};
